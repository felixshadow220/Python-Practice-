import random
import string

lower = string.ascii_lowercase
upper = string.ascii_uppercase
number = string.digits
symbol = string.punctuation

# use random.choice() with a for loop instead of random.sample() as the later can only generate sequence without replcacement, which may redcue the complexity of the password 
def low_case():
    return "".join(random.choice(lower) for i in range (random.randint(5, 20)))

# do the same thing with uppercase
def upper_case():
    return "".join(random.choice(upper) for i in range (random.randint(5, 20)))

def num():
    return "".join(random.choice(number) for i in range(random.randint(5, 20)))

def symbols():
    return "".join(random.choice(symbol) for i in range (random.randint(5, 20)))

# instead of struglling to use random.shuffle(), I join the four parts into a long sequence, and then use random choice to select a given number (e.g 12) of it as a password
def pw():
    pw = low_case() + upper_case() + num() + symbols()
    need_pw = str(input("Do you need a new password? ").capitalize())
    if need_pw != "Yes":
        return ("Thank you!")
    
    pw_length = int(input("How long do you want your password to be? "))
    # a password that is shorter than 8 characters will likely be considered weak
    if pw_length >= 8:
        return ("This is your new password: " + "" .join(random.choice(pw) for i in range (pw_length)))
    else:
        return ("Sorry! your password needs to be at least 8 characters long and this is your new password: " + "" .join(random.choice(pw) for i in range (random.randint(8, 12))))
